Log

04/04/17
*trading/hist.py
- Fixing date time to RFC3339 format
- Fixing download part

Created new_hist.py

Problems:
- Need to reformat data (solved)
- Try to export to hdf5 format (solved)

05/04/17
Moved new_hist.py to main folder

*new_hist.py
- Added a mock strategy

Problems:
- Strategy not working (solved)

07/04/17
*new_hist.py
- Showing plot
- Strategy checked and worked

Problems:
- Add a y = 1 line for plot (solved using grid)
- Need to store data (solved - hdf5)
- Create a strategy class (solved 09/04/17)
- Create a for loop for repetitive data chunk download (Solved)
	- Currently having issues with prices somehow being empty
	DataFrame(solved - dataframe actually worked as shown)
	- A few trials show that there is nothing wrong with data retrieval, but rather appending dataframe doesn't work
	- Solved, check here for solution: http://stackoverflow.com/questions/16597265/appending-to-an-empty-data-frame-in-pandas

Homework (Hoang):
- Read "Master databases for algorithmic trading" by quantstart
- Read chapter 3 of "Python for Algorithmic Trading"

09/04/17
added momentum strategy to replace test random strat.

Problems:
- Need a method to track positions and P&L
- Need experiments with various momentum timeframes.
- Crude fix for local var problem. Leaner code might be possible. 

#TODO: scale up to run multiple strategies
#TODO: multiple currency pairs

10/04/17
Some discussions on financial data:
- Considering AWS or DigitalOcean for data storing
- Already had steaming.py, so don't have to work on it
- Might have to consider practical optimization regarding discrepancies between original price and bid/ask price

Begin working on strategies
Reading assignment (Hoang):
- https://en.wikipedia.org/wiki/Mathematical_finance
- Algorithmic Trading Winning Strategies



=======
add position management: position.py
add placeholder for portfolio.py

Problems:
- Bug detected: cannot fill order. Possible reason: no margin left. 
- Need to check with new API for possible changes, particularly "SHORT" side
#TODO: fill NaN positions (seems not to work - need revised)

16/04/2017
Wrote a self-reflection about the CME challenge, also propose a working mechanism for the summer interns.

17/04/2017
Working on:
- Update data visualization for new_hist.py using seaborn and potentially bokeh.
- Writing mean-reversion strategy. First, we need to figure out how to feed the data into the system.

*On data visualization:
Some tutorials to look into
https://www.oreilly.com/learning/data-visualization-with-seaborn
http://pbpython.com/visualization-tools-1.html

Also, besides seaborn, there bokeh and matplotlib as potential libraries. Some evaluations:
- Matplotlib is for basic plotting -- bars, pies, lines, scatter plots, etc.

- Seaborn is for statistical visualization -- use it if you're creating heatmaps or somehow summarizing your data and still want to show the distribution of your data

- Bokeh is for interactive visualization -- if your data is so complex (or you haven't yet found the "message" in your data), then use Bokeh to create interactive visualizations that will allow your viewers to explore the data themselves

*new_hist.py
Trying out seaborn api for a better data visualization.
Stuff to try:
- COLH dataviz
- Time-series walk
- Growth visualization


*mean-reversion.py
First trying to understand the structure, it involves event.py, streaming.py and trading.py

22/04/2017
Resumed working
*mean-reversion.py
Implementing Hurst exponent algorithm


23/04/2017
Done with Hurst, created a Hurst.py so that in the future we can use Hurst test for different strategies
Some helpful links:
https://www.quantopian.com/posts/hurst-exponent
https://www.quantopian.com/posts/some-code-from-ernie-chans-new-book-implemented-in-python

24/04/2017
Reorganize GitHub into folders for easy future reference. 
#TODO: 
- change import in major .py programs to reflect new changes. 
- create a readme for statistical tests for instructions.

25/04/2017
*statisticaltest.py
Implementing Johansen test, ADF and CADF test

27/04/2017
Implement portfolio management
Problem:
- BEWARE: Not tested with all cases. UNSTABLE. But provide a good framework
regardless for future strategies. 

28/04/2017
update position.py using Decimal

04/05/2017
Finished Johansen

Remember to install johansen and stock API

05/05/2017
Cleaned up new_hist.py, vectorized file will import historical data from new_hist.py
Working on CAPM test and vectorized backtesting
